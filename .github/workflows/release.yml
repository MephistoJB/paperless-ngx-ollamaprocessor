name: Create GitHub Release on Version Change

on:
  push:
    paths:
      - app.py
    branches:
      - main

permissions:
  contents: write  # Allows creating releases

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      changed: ${{ steps.check_version.outputs.changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetches previous commit for comparison

      - name: Extract Version from app.py
        id: get_version
        run: |
          VERSION=$(grep -oP 'VERSION\s*=\s*\"\K[^\"]+' app.py)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if Version Changed
        id: check_version
        run: |
          PREV_VERSION=$(git show HEAD~1:app.py | grep -oP 'VERSION\s*=\s*"\K[^"]+' || echo "none")
          echo "Previous Version: $PREV_VERSION"
          echo "Current Version: ${{ env.version }}"
          if [ "$PREV_VERSION" != "${{ env.version }}" ]; then
            echo "changed=true" >> $GITHUB_ENV
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_ENV
            echo "changed=false" >> $GITHUB_OUTPUT

  create-release:
    needs: check-version
    if: ${{ needs.check-version.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 100  # Ensure we get enough history for commit messages

      - name: Get Commit Messages
        id: commit_messages
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            echo "No previous tag found, listing last 10 commits."
            git log --pretty=format:"- %s" -n 10 > commits.txt
          else
            echo "Generating commit list since last tag: $PREV_TAG"
            git log $PREV_TAG..HEAD --pretty=format:"- %s" > commits.txt
          fi
          echo "commit_body=$(cat commits.txt)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          name: Release v${{ needs.check-version.outputs.version }}
          body: |
            ## Changes in this Release:
            ${{ env.commit_body }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
